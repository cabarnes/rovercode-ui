// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The MissionControl container renders on the page with no errors 1`] = `
<MissionControl
  location={
    Object {
      "state": Object {
        "readOnly": false,
      },
    }
  }
  store={
    Object {
      "dispatch": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "payload": Promise {},
              "type": "FETCH_TAGS",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Promise {},
          },
        ],
      },
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Grid>
    <div
      className="ui grid"
    >
      <GridRow>
        <div
          className="row"
        >
          <GridColumn
            width={3}
          >
            <div
              className="three wide column"
            >
              <GridRow>
                <div
                  className="row"
                >
                  <Segment
                    basic={true}
                    compact={true}
                  >
                    <div
                      className="ui basic compact segment"
                    >
                      <Component
                        location={
                          Object {
                            "state": Object {
                              "readOnly": false,
                            },
                          }
                        }
                      >
                        <div />
                      </Component>
                    </div>
                  </Segment>
                </div>
              </GridRow>
              <Divider>
                <div
                  className="ui divider"
                />
              </Divider>
              <GridRow>
                <div
                  className="row"
                >
                  <Header
                    as="h2"
                    textAlign="center"
                  >
                    <h2
                      className="ui center aligned header"
                    >
                      <FormattedMessage
                        defaultMessage="Tags"
                        id="app.mission_control.tags"
                        values={Object {}}
                      >
                        Tags
                      </FormattedMessage>
                    </h2>
                  </Header>
                  <withCookies(injectIntl(Connect(ProgramTags)))>
                    <withCookies(injectIntl(Connect(ProgramTags)))
                      cookies={
                        Cookies {
                          "HAS_DOCUMENT_COOKIE": true,
                          "changeListeners": Array [
                            [Function],
                          ],
                          "cookies": Object {},
                        }
                      }
                      forwardedRef={null}
                    >
                      <injectIntl(Connect(ProgramTags))
                        allCookies={Object {}}
                        cookies={
                          Cookies {
                            "HAS_DOCUMENT_COOKIE": true,
                            "changeListeners": Array [
                              [Function],
                            ],
                            "cookies": Object {},
                          }
                        }
                      >
                        <Connect(ProgramTags)
                          allCookies={Object {}}
                          cookies={
                            Cookies {
                              "HAS_DOCUMENT_COOKIE": true,
                              "changeListeners": Array [
                                [Function],
                              ],
                              "cookies": Object {},
                            }
                          }
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatDateToParts": [Function],
                              "formatDisplayName": [Function],
                              "formatHTMLMessage": [Function],
                              "formatList": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatNumberToParts": [Function],
                              "formatPlural": [Function],
                              "formatRelativeTime": [Function],
                              "formatTime": [Function],
                              "formatTimeToParts": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getDisplayNames": [Function],
                                "getListFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralRules": [Function],
                                "getRelativeTimeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "onError": [Function],
                              "textComponent": Symbol(react.fragment),
                              "timeZone": undefined,
                            }
                          }
                        >
                          <ProgramTags
                            allCookies={Object {}}
                            changeProgramTags={[Function]}
                            code={
                              Object {
                                "jsCode": "testcode",
                                "tags": Array [],
                              }
                            }
                            cookies={
                              Cookies {
                                "HAS_DOCUMENT_COOKIE": true,
                                "changeListeners": Array [
                                  [Function],
                                ],
                                "cookies": Object {},
                              }
                            }
                            fetchTags={[Function]}
                            intl={
                              Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatDateToParts": [Function],
                                "formatDisplayName": [Function],
                                "formatHTMLMessage": [Function],
                                "formatList": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatNumberToParts": [Function],
                                "formatPlural": [Function],
                                "formatRelativeTime": [Function],
                                "formatTime": [Function],
                                "formatTimeToParts": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getDisplayNames": [Function],
                                  "getListFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralRules": [Function],
                                  "getRelativeTimeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "onError": [Function],
                                "textComponent": Symbol(react.fragment),
                                "timeZone": undefined,
                              }
                            }
                            tag={
                              Object {
                                "error": null,
                                "isFetching": false,
                                "tags": Array [],
                              }
                            }
                          >
                            <WithStyles(ForwardRef(Grid))
                              alignItems="stretch"
                              container={true}
                              direction="column"
                              justify="center"
                              spacing={1}
                            >
                              <ForwardRef(Grid)
                                alignItems="stretch"
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                    "container": "MuiGrid-container",
                                    "direction-xs-column": "MuiGrid-direction-xs-column",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                    "grid-lg-1": "MuiGrid-grid-lg-1",
                                    "grid-lg-10": "MuiGrid-grid-lg-10",
                                    "grid-lg-11": "MuiGrid-grid-lg-11",
                                    "grid-lg-12": "MuiGrid-grid-lg-12",
                                    "grid-lg-2": "MuiGrid-grid-lg-2",
                                    "grid-lg-3": "MuiGrid-grid-lg-3",
                                    "grid-lg-4": "MuiGrid-grid-lg-4",
                                    "grid-lg-5": "MuiGrid-grid-lg-5",
                                    "grid-lg-6": "MuiGrid-grid-lg-6",
                                    "grid-lg-7": "MuiGrid-grid-lg-7",
                                    "grid-lg-8": "MuiGrid-grid-lg-8",
                                    "grid-lg-9": "MuiGrid-grid-lg-9",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                    "grid-lg-true": "MuiGrid-grid-lg-true",
                                    "grid-md-1": "MuiGrid-grid-md-1",
                                    "grid-md-10": "MuiGrid-grid-md-10",
                                    "grid-md-11": "MuiGrid-grid-md-11",
                                    "grid-md-12": "MuiGrid-grid-md-12",
                                    "grid-md-2": "MuiGrid-grid-md-2",
                                    "grid-md-3": "MuiGrid-grid-md-3",
                                    "grid-md-4": "MuiGrid-grid-md-4",
                                    "grid-md-5": "MuiGrid-grid-md-5",
                                    "grid-md-6": "MuiGrid-grid-md-6",
                                    "grid-md-7": "MuiGrid-grid-md-7",
                                    "grid-md-8": "MuiGrid-grid-md-8",
                                    "grid-md-9": "MuiGrid-grid-md-9",
                                    "grid-md-auto": "MuiGrid-grid-md-auto",
                                    "grid-md-true": "MuiGrid-grid-md-true",
                                    "grid-sm-1": "MuiGrid-grid-sm-1",
                                    "grid-sm-10": "MuiGrid-grid-sm-10",
                                    "grid-sm-11": "MuiGrid-grid-sm-11",
                                    "grid-sm-12": "MuiGrid-grid-sm-12",
                                    "grid-sm-2": "MuiGrid-grid-sm-2",
                                    "grid-sm-3": "MuiGrid-grid-sm-3",
                                    "grid-sm-4": "MuiGrid-grid-sm-4",
                                    "grid-sm-5": "MuiGrid-grid-sm-5",
                                    "grid-sm-6": "MuiGrid-grid-sm-6",
                                    "grid-sm-7": "MuiGrid-grid-sm-7",
                                    "grid-sm-8": "MuiGrid-grid-sm-8",
                                    "grid-sm-9": "MuiGrid-grid-sm-9",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                    "grid-sm-true": "MuiGrid-grid-sm-true",
                                    "grid-xl-1": "MuiGrid-grid-xl-1",
                                    "grid-xl-10": "MuiGrid-grid-xl-10",
                                    "grid-xl-11": "MuiGrid-grid-xl-11",
                                    "grid-xl-12": "MuiGrid-grid-xl-12",
                                    "grid-xl-2": "MuiGrid-grid-xl-2",
                                    "grid-xl-3": "MuiGrid-grid-xl-3",
                                    "grid-xl-4": "MuiGrid-grid-xl-4",
                                    "grid-xl-5": "MuiGrid-grid-xl-5",
                                    "grid-xl-6": "MuiGrid-grid-xl-6",
                                    "grid-xl-7": "MuiGrid-grid-xl-7",
                                    "grid-xl-8": "MuiGrid-grid-xl-8",
                                    "grid-xl-9": "MuiGrid-grid-xl-9",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                    "grid-xl-true": "MuiGrid-grid-xl-true",
                                    "grid-xs-1": "MuiGrid-grid-xs-1",
                                    "grid-xs-10": "MuiGrid-grid-xs-10",
                                    "grid-xs-11": "MuiGrid-grid-xs-11",
                                    "grid-xs-12": "MuiGrid-grid-xs-12",
                                    "grid-xs-2": "MuiGrid-grid-xs-2",
                                    "grid-xs-3": "MuiGrid-grid-xs-3",
                                    "grid-xs-4": "MuiGrid-grid-xs-4",
                                    "grid-xs-5": "MuiGrid-grid-xs-5",
                                    "grid-xs-6": "MuiGrid-grid-xs-6",
                                    "grid-xs-7": "MuiGrid-grid-xs-7",
                                    "grid-xs-8": "MuiGrid-grid-xs-8",
                                    "grid-xs-9": "MuiGrid-grid-xs-9",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                    "grid-xs-true": "MuiGrid-grid-xs-true",
                                    "item": "MuiGrid-item",
                                    "justify-xs-center": "MuiGrid-justify-xs-center",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                    "root": "MuiGrid-root",
                                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                  }
                                }
                                container={true}
                                direction="column"
                                justify="center"
                                spacing={1}
                              >
                                <div
                                  className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-1 MuiGrid-direction-xs-column MuiGrid-justify-xs-center"
                                >
                                  <WithStyles(ForwardRef(Grid))
                                    item={true}
                                  >
                                    <ForwardRef(Grid)
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                          "container": "MuiGrid-container",
                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                          "grid-md-1": "MuiGrid-grid-md-1",
                                          "grid-md-10": "MuiGrid-grid-md-10",
                                          "grid-md-11": "MuiGrid-grid-md-11",
                                          "grid-md-12": "MuiGrid-grid-md-12",
                                          "grid-md-2": "MuiGrid-grid-md-2",
                                          "grid-md-3": "MuiGrid-grid-md-3",
                                          "grid-md-4": "MuiGrid-grid-md-4",
                                          "grid-md-5": "MuiGrid-grid-md-5",
                                          "grid-md-6": "MuiGrid-grid-md-6",
                                          "grid-md-7": "MuiGrid-grid-md-7",
                                          "grid-md-8": "MuiGrid-grid-md-8",
                                          "grid-md-9": "MuiGrid-grid-md-9",
                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                          "grid-md-true": "MuiGrid-grid-md-true",
                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                          "item": "MuiGrid-item",
                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                          "root": "MuiGrid-root",
                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                        }
                                      }
                                      item={true}
                                    >
                                      <div
                                        className="MuiGrid-root MuiGrid-item"
                                      >
                                        <WithStyles(ForwardRef(Autocomplete))
                                          filterSelectedOptions={true}
                                          freeSolo={true}
                                          id="tag-select"
                                          multiple={true}
                                          onChange={[Function]}
                                          options={Array []}
                                          renderInput={[Function]}
                                          renderTags={[Function]}
                                          size="small"
                                          value={Array []}
                                        >
                                          <ForwardRef(Autocomplete)
                                            classes={
                                              Object {
                                                "clearIndicator": "MuiAutocomplete-clearIndicator",
                                                "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
                                                "endAdornment": "MuiAutocomplete-endAdornment",
                                                "focused": "Mui-focused",
                                                "fullWidth": "MuiAutocomplete-fullWidth",
                                                "groupLabel": "MuiAutocomplete-groupLabel",
                                                "groupUl": "MuiAutocomplete-groupUl",
                                                "hasClearIcon": "MuiAutocomplete-hasClearIcon",
                                                "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
                                                "input": "MuiAutocomplete-input",
                                                "inputFocused": "MuiAutocomplete-inputFocused",
                                                "inputRoot": "MuiAutocomplete-inputRoot",
                                                "listbox": "MuiAutocomplete-listbox",
                                                "loading": "MuiAutocomplete-loading",
                                                "noOptions": "MuiAutocomplete-noOptions",
                                                "option": "MuiAutocomplete-option",
                                                "paper": "MuiAutocomplete-paper",
                                                "popper": "MuiAutocomplete-popper",
                                                "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
                                                "popupIndicator": "MuiAutocomplete-popupIndicator",
                                                "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
                                                "root": "MuiAutocomplete-root",
                                                "tag": "MuiAutocomplete-tag",
                                                "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
                                              }
                                            }
                                            filterSelectedOptions={true}
                                            freeSolo={true}
                                            id="tag-select"
                                            multiple={true}
                                            onChange={[Function]}
                                            options={Array []}
                                            renderInput={[Function]}
                                            renderTags={[Function]}
                                            size="small"
                                            value={Array []}
                                          >
                                            <div
                                              aria-expanded={false}
                                              aria-owns={null}
                                              className="MuiAutocomplete-root MuiAutocomplete-hasClearIcon"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseDown={[Function]}
                                              role="combobox"
                                            >
                                              <WithStyles(ForwardRef(TextField))
                                                InputLabelProps={
                                                  Object {
                                                    "htmlFor": "tag-select",
                                                    "id": "tag-select-label",
                                                  }
                                                }
                                                InputProps={
                                                  Object {
                                                    "className": "MuiAutocomplete-inputRoot",
                                                    "endAdornment": <div
                                                      className="MuiAutocomplete-endAdornment"
                                                    >
                                                      <WithStyles(ForwardRef(IconButton))
                                                        aria-label="Clear"
                                                        className="MuiAutocomplete-clearIndicator"
                                                        onClick={[Function]}
                                                        tabIndex={-1}
                                                        title="Clear"
                                                      >
                                                        <Memo(CloseIcon)
                                                          fontSize="small"
                                                        />
                                                      </WithStyles(ForwardRef(IconButton))>
                                                    </div>,
                                                    "ref": [Function],
                                                    "startAdornment": undefined,
                                                  }
                                                }
                                                disabled={false}
                                                fullWidth={true}
                                                id="tag-select"
                                                inputProps={
                                                  Object {
                                                    "aria-activedescendant": null,
                                                    "aria-autocomplete": "list",
                                                    "aria-controls": null,
                                                    "autoCapitalize": "none",
                                                    "autoComplete": "off",
                                                    "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                    "disabled": false,
                                                    "id": "tag-select",
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onFocus": [Function],
                                                    "onMouseDown": [Function],
                                                    "ref": Object {
                                                      "current": <input
                                                        aria-autocomplete="list"
                                                        aria-invalid="false"
                                                        autocapitalize="none"
                                                        autocomplete="off"
                                                        class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
                                                        id="tag-select"
                                                        spellcheck="false"
                                                        type="text"
                                                        value=""
                                                      />,
                                                    },
                                                    "spellCheck": "false",
                                                    "value": "",
                                                  }
                                                }
                                                label="Add tags..."
                                                size="small"
                                                variant="outlined"
                                              >
                                                <ForwardRef(TextField)
                                                  InputLabelProps={
                                                    Object {
                                                      "htmlFor": "tag-select",
                                                      "id": "tag-select-label",
                                                    }
                                                  }
                                                  InputProps={
                                                    Object {
                                                      "className": "MuiAutocomplete-inputRoot",
                                                      "endAdornment": <div
                                                        className="MuiAutocomplete-endAdornment"
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          aria-label="Clear"
                                                          className="MuiAutocomplete-clearIndicator"
                                                          onClick={[Function]}
                                                          tabIndex={-1}
                                                          title="Clear"
                                                        >
                                                          <Memo(CloseIcon)
                                                            fontSize="small"
                                                          />
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </div>,
                                                      "ref": [Function],
                                                      "startAdornment": undefined,
                                                    }
                                                  }
                                                  classes={
                                                    Object {
                                                      "root": "MuiTextField-root",
                                                    }
                                                  }
                                                  disabled={false}
                                                  fullWidth={true}
                                                  id="tag-select"
                                                  inputProps={
                                                    Object {
                                                      "aria-activedescendant": null,
                                                      "aria-autocomplete": "list",
                                                      "aria-controls": null,
                                                      "autoCapitalize": "none",
                                                      "autoComplete": "off",
                                                      "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                      "disabled": false,
                                                      "id": "tag-select",
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onFocus": [Function],
                                                      "onMouseDown": [Function],
                                                      "ref": Object {
                                                        "current": <input
                                                          aria-autocomplete="list"
                                                          aria-invalid="false"
                                                          autocapitalize="none"
                                                          autocomplete="off"
                                                          class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
                                                          id="tag-select"
                                                          spellcheck="false"
                                                          type="text"
                                                          value=""
                                                        />,
                                                      },
                                                      "spellCheck": "false",
                                                      "value": "",
                                                    }
                                                  }
                                                  label="Add tags..."
                                                  size="small"
                                                  variant="outlined"
                                                >
                                                  <WithStyles(ForwardRef(FormControl))
                                                    className="MuiTextField-root"
                                                    color="primary"
                                                    disabled={false}
                                                    error={false}
                                                    fullWidth={true}
                                                    required={false}
                                                    size="small"
                                                    variant="outlined"
                                                  >
                                                    <ForwardRef(FormControl)
                                                      className="MuiTextField-root"
                                                      classes={
                                                        Object {
                                                          "fullWidth": "MuiFormControl-fullWidth",
                                                          "marginDense": "MuiFormControl-marginDense",
                                                          "marginNormal": "MuiFormControl-marginNormal",
                                                          "root": "MuiFormControl-root",
                                                        }
                                                      }
                                                      color="primary"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      required={false}
                                                      size="small"
                                                      variant="outlined"
                                                    >
                                                      <div
                                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                      >
                                                        <WithStyles(ForwardRef(InputLabel))
                                                          htmlFor="tag-select"
                                                          id="tag-select-label"
                                                        >
                                                          <ForwardRef(InputLabel)
                                                            classes={
                                                              Object {
                                                                "animated": "MuiInputLabel-animated",
                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "filled": "MuiInputLabel-filled",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInputLabel-formControl",
                                                                "marginDense": "MuiInputLabel-marginDense",
                                                                "outlined": "MuiInputLabel-outlined",
                                                                "required": "Mui-required",
                                                                "root": "MuiInputLabel-root",
                                                                "shrink": "MuiInputLabel-shrink",
                                                              }
                                                            }
                                                            htmlFor="tag-select"
                                                            id="tag-select-label"
                                                          >
                                                            <WithStyles(ForwardRef(FormLabel))
                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-marginDense MuiInputLabel-outlined"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "required": "Mui-required",
                                                                }
                                                              }
                                                              data-shrink={false}
                                                              htmlFor="tag-select"
                                                              id="tag-select-label"
                                                            >
                                                              <ForwardRef(FormLabel)
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-marginDense MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "filled": "MuiFormLabel-filled",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "required": "Mui-required Mui-required",
                                                                    "root": "MuiFormLabel-root",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                                htmlFor="tag-select"
                                                                id="tag-select-label"
                                                              >
                                                                <label
                                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-marginDense MuiInputLabel-outlined"
                                                                  data-shrink={false}
                                                                  htmlFor="tag-select"
                                                                  id="tag-select-label"
                                                                >
                                                                  Add tags...
                                                                </label>
                                                              </ForwardRef(FormLabel)>
                                                            </WithStyles(ForwardRef(FormLabel))>
                                                          </ForwardRef(InputLabel)>
                                                        </WithStyles(ForwardRef(InputLabel))>
                                                        <WithStyles(ForwardRef(OutlinedInput))
                                                          autoFocus={false}
                                                          className="MuiAutocomplete-inputRoot"
                                                          endAdornment={
                                                            <div
                                                              className="MuiAutocomplete-endAdornment"
                                                            >
                                                              <WithStyles(ForwardRef(IconButton))
                                                                aria-label="Clear"
                                                                className="MuiAutocomplete-clearIndicator"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                                title="Clear"
                                                              >
                                                                <Memo(CloseIcon)
                                                                  fontSize="small"
                                                                />
                                                              </WithStyles(ForwardRef(IconButton))>
                                                            </div>
                                                          }
                                                          fullWidth={true}
                                                          id="tag-select"
                                                          inputProps={
                                                            Object {
                                                              "aria-activedescendant": null,
                                                              "aria-autocomplete": "list",
                                                              "aria-controls": null,
                                                              "autoCapitalize": "none",
                                                              "autoComplete": "off",
                                                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                              "disabled": false,
                                                              "id": "tag-select",
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onFocus": [Function],
                                                              "onMouseDown": [Function],
                                                              "ref": Object {
                                                                "current": <input
                                                                  aria-autocomplete="list"
                                                                  aria-invalid="false"
                                                                  autocapitalize="none"
                                                                  autocomplete="off"
                                                                  class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
                                                                  id="tag-select"
                                                                  spellcheck="false"
                                                                  type="text"
                                                                  value=""
                                                                />,
                                                              },
                                                              "spellCheck": "false",
                                                              "value": "",
                                                            }
                                                          }
                                                          label={
                                                            <React.Fragment>
                                                              Add tags...
                                                            </React.Fragment>
                                                          }
                                                          multiline={false}
                                                        >
                                                          <ForwardRef(OutlinedInput)
                                                            autoFocus={false}
                                                            className="MuiAutocomplete-inputRoot"
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "input": "MuiOutlinedInput-input",
                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            endAdornment={
                                                              <div
                                                                className="MuiAutocomplete-endAdornment"
                                                              >
                                                                <WithStyles(ForwardRef(IconButton))
                                                                  aria-label="Clear"
                                                                  className="MuiAutocomplete-clearIndicator"
                                                                  onClick={[Function]}
                                                                  tabIndex={-1}
                                                                  title="Clear"
                                                                >
                                                                  <Memo(CloseIcon)
                                                                    fontSize="small"
                                                                  />
                                                                </WithStyles(ForwardRef(IconButton))>
                                                              </div>
                                                            }
                                                            fullWidth={true}
                                                            id="tag-select"
                                                            inputProps={
                                                              Object {
                                                                "aria-activedescendant": null,
                                                                "aria-autocomplete": "list",
                                                                "aria-controls": null,
                                                                "autoCapitalize": "none",
                                                                "autoComplete": "off",
                                                                "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                                "disabled": false,
                                                                "id": "tag-select",
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onFocus": [Function],
                                                                "onMouseDown": [Function],
                                                                "ref": Object {
                                                                  "current": <input
                                                                    aria-autocomplete="list"
                                                                    aria-invalid="false"
                                                                    autocapitalize="none"
                                                                    autocomplete="off"
                                                                    class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
                                                                    id="tag-select"
                                                                    spellcheck="false"
                                                                    type="text"
                                                                    value=""
                                                                  />,
                                                                },
                                                                "spellCheck": "false",
                                                                "value": "",
                                                              }
                                                            }
                                                            label={
                                                              <React.Fragment>
                                                                Add tags...
                                                              </React.Fragment>
                                                            }
                                                            multiline={false}
                                                          >
                                                            <WithStyles(ForwardRef(InputBase))
                                                              autoFocus={false}
                                                              className="MuiAutocomplete-inputRoot"
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              endAdornment={
                                                                <div
                                                                  className="MuiAutocomplete-endAdornment"
                                                                >
                                                                  <WithStyles(ForwardRef(IconButton))
                                                                    aria-label="Clear"
                                                                    className="MuiAutocomplete-clearIndicator"
                                                                    onClick={[Function]}
                                                                    tabIndex={-1}
                                                                    title="Clear"
                                                                  >
                                                                    <Memo(CloseIcon)
                                                                      fontSize="small"
                                                                    />
                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                </div>
                                                              }
                                                              fullWidth={true}
                                                              id="tag-select"
                                                              inputComponent="input"
                                                              inputProps={
                                                                Object {
                                                                  "aria-activedescendant": null,
                                                                  "aria-autocomplete": "list",
                                                                  "aria-controls": null,
                                                                  "autoCapitalize": "none",
                                                                  "autoComplete": "off",
                                                                  "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                                  "disabled": false,
                                                                  "id": "tag-select",
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onFocus": [Function],
                                                                  "onMouseDown": [Function],
                                                                  "ref": Object {
                                                                    "current": <input
                                                                      aria-autocomplete="list"
                                                                      aria-invalid="false"
                                                                      autocapitalize="none"
                                                                      autocomplete="off"
                                                                      class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
                                                                      id="tag-select"
                                                                      spellcheck="false"
                                                                      type="text"
                                                                      value=""
                                                                    />,
                                                                  },
                                                                  "spellCheck": "false",
                                                                  "value": "",
                                                                }
                                                              }
                                                              multiline={false}
                                                              renderSuffix={[Function]}
                                                              type="text"
                                                            >
                                                              <ForwardRef(InputBase)
                                                                autoFocus={false}
                                                                className="MuiAutocomplete-inputRoot"
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "formControl": "MuiInputBase-formControl",
                                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                endAdornment={
                                                                  <div
                                                                    className="MuiAutocomplete-endAdornment"
                                                                  >
                                                                    <WithStyles(ForwardRef(IconButton))
                                                                      aria-label="Clear"
                                                                      className="MuiAutocomplete-clearIndicator"
                                                                      onClick={[Function]}
                                                                      tabIndex={-1}
                                                                      title="Clear"
                                                                    >
                                                                      <Memo(CloseIcon)
                                                                        fontSize="small"
                                                                      />
                                                                    </WithStyles(ForwardRef(IconButton))>
                                                                  </div>
                                                                }
                                                                fullWidth={true}
                                                                id="tag-select"
                                                                inputComponent="input"
                                                                inputProps={
                                                                  Object {
                                                                    "aria-activedescendant": null,
                                                                    "aria-autocomplete": "list",
                                                                    "aria-controls": null,
                                                                    "autoCapitalize": "none",
                                                                    "autoComplete": "off",
                                                                    "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                                    "disabled": false,
                                                                    "id": "tag-select",
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onFocus": [Function],
                                                                    "onMouseDown": [Function],
                                                                    "ref": Object {
                                                                      "current": <input
                                                                        aria-autocomplete="list"
                                                                        aria-invalid="false"
                                                                        autocapitalize="none"
                                                                        autocomplete="off"
                                                                        class="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
                                                                        id="tag-select"
                                                                        spellcheck="false"
                                                                        type="text"
                                                                        value=""
                                                                      />,
                                                                    },
                                                                    "spellCheck": "false",
                                                                    "value": "",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root MuiOutlinedInput-root MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd MuiInputBase-marginDense MuiOutlinedInput-marginDense"
                                                                  onClick={[Function]}
                                                                >
                                                                  <input
                                                                    aria-activedescendant={null}
                                                                    aria-autocomplete="list"
                                                                    aria-controls={null}
                                                                    aria-invalid={false}
                                                                    autoCapitalize="none"
                                                                    autoComplete="off"
                                                                    autoFocus={false}
                                                                    className="MuiInputBase-input MuiOutlinedInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
                                                                    disabled={false}
                                                                    id="tag-select"
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    required={false}
                                                                    spellCheck="false"
                                                                    type="text"
                                                                    value=""
                                                                  />
                                                                  <div
                                                                    className="MuiAutocomplete-endAdornment"
                                                                  >
                                                                    <WithStyles(ForwardRef(IconButton))
                                                                      aria-label="Clear"
                                                                      className="MuiAutocomplete-clearIndicator"
                                                                      onClick={[Function]}
                                                                      tabIndex={-1}
                                                                      title="Clear"
                                                                    >
                                                                      <ForwardRef(IconButton)
                                                                        aria-label="Clear"
                                                                        className="MuiAutocomplete-clearIndicator"
                                                                        classes={
                                                                          Object {
                                                                            "colorInherit": "MuiIconButton-colorInherit",
                                                                            "colorPrimary": "MuiIconButton-colorPrimary",
                                                                            "colorSecondary": "MuiIconButton-colorSecondary",
                                                                            "disabled": "Mui-disabled",
                                                                            "edgeEnd": "MuiIconButton-edgeEnd",
                                                                            "edgeStart": "MuiIconButton-edgeStart",
                                                                            "label": "MuiIconButton-label",
                                                                            "root": "MuiIconButton-root",
                                                                            "sizeSmall": "MuiIconButton-sizeSmall",
                                                                          }
                                                                        }
                                                                        onClick={[Function]}
                                                                        tabIndex={-1}
                                                                        title="Clear"
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          aria-label="Clear"
                                                                          centerRipple={true}
                                                                          className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                                                          disabled={false}
                                                                          focusRipple={true}
                                                                          onClick={[Function]}
                                                                          tabIndex={-1}
                                                                          title="Clear"
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            aria-label="Clear"
                                                                            centerRipple={true}
                                                                            className="MuiIconButton-root MuiAutocomplete-clearIndicator"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            disabled={false}
                                                                            focusRipple={true}
                                                                            onClick={[Function]}
                                                                            tabIndex={-1}
                                                                            title="Clear"
                                                                          >
                                                                            <button
                                                                              aria-label="Clear"
                                                                              className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator"
                                                                              disabled={false}
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              tabIndex={-1}
                                                                              title="Clear"
                                                                              type="button"
                                                                            >
                                                                              <span
                                                                                className="MuiIconButton-label"
                                                                              >
                                                                                <ForwardRef
                                                                                  fontSize="small"
                                                                                >
                                                                                  <WithStyles(ForwardRef(SvgIcon))
                                                                                    fontSize="small"
                                                                                  >
                                                                                    <ForwardRef(SvgIcon)
                                                                                      classes={
                                                                                        Object {
                                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                          "root": "MuiSvgIcon-root",
                                                                                        }
                                                                                      }
                                                                                      fontSize="small"
                                                                                    >
                                                                                      <svg
                                                                                        aria-hidden="true"
                                                                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                                        focusable="false"
                                                                                        viewBox="0 0 24 24"
                                                                                      >
                                                                                        <path
                                                                                          d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                        />
                                                                                      </svg>
                                                                                    </ForwardRef(SvgIcon)>
                                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                                </ForwardRef>
                                                                              </span>
                                                                              <WithStyles(memo)
                                                                                center={true}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={true}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </button>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(IconButton)>
                                                                    </WithStyles(ForwardRef(IconButton))>
                                                                  </div>
                                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                    label={
                                                                      <React.Fragment>
                                                                        Add tags...
                                                                      </React.Fragment>
                                                                    }
                                                                    labelWidth={0}
                                                                    notched={false}
                                                                  >
                                                                    <ForwardRef(NotchedOutline)
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      classes={
                                                                        Object {
                                                                          "legend": "PrivateNotchedOutline-legend-208",
                                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-209",
                                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-210",
                                                                          "root": "PrivateNotchedOutline-root-207",
                                                                        }
                                                                      }
                                                                      label={
                                                                        <React.Fragment>
                                                                          Add tags...
                                                                        </React.Fragment>
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="PrivateNotchedOutline-root-207 MuiOutlinedInput-notchedOutline"
                                                                      >
                                                                        <legend
                                                                          className="PrivateNotchedOutline-legendLabelled-209"
                                                                        >
                                                                          <span>
                                                                            Add tags...
                                                                          </span>
                                                                        </legend>
                                                                      </fieldset>
                                                                    </ForwardRef(NotchedOutline)>
                                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                                </div>
                                                              </ForwardRef(InputBase)>
                                                            </WithStyles(ForwardRef(InputBase))>
                                                          </ForwardRef(OutlinedInput)>
                                                        </WithStyles(ForwardRef(OutlinedInput))>
                                                      </div>
                                                    </ForwardRef(FormControl)>
                                                  </WithStyles(ForwardRef(FormControl))>
                                                </ForwardRef(TextField)>
                                              </WithStyles(ForwardRef(TextField))>
                                            </div>
                                          </ForwardRef(Autocomplete)>
                                        </WithStyles(ForwardRef(Autocomplete))>
                                      </div>
                                    </ForwardRef(Grid)>
                                  </WithStyles(ForwardRef(Grid))>
                                </div>
                              </ForwardRef(Grid)>
                            </WithStyles(ForwardRef(Grid))>
                          </ProgramTags>
                        </Connect(ProgramTags)>
                      </injectIntl(Connect(ProgramTags))>
                    </withCookies(injectIntl(Connect(ProgramTags)))>
                  </withCookies(injectIntl(Connect(ProgramTags)))>
                </div>
              </GridRow>
              <Divider>
                <div
                  className="ui divider"
                />
              </Divider>
              <GridRow>
                <div
                  className="row"
                >
                  <Segment
                    basic={true}
                    compact={true}
                  >
                    <div
                      className="ui basic compact segment"
                    >
                      <Component>
                        <div />
                      </Component>
                    </div>
                  </Segment>
                </div>
              </GridRow>
            </div>
          </GridColumn>
          <GridColumn
            width={10}
          >
            <div
              className="ten wide column"
            >
              <Component
                location={
                  Object {
                    "state": Object {
                      "readOnly": false,
                    },
                  }
                }
              >
                <div />
              </Component>
            </div>
          </GridColumn>
          <GridColumn
            width={3}
          >
            <div
              className="three wide column"
            >
              <GridRow>
                <div
                  className="row"
                >
                  <Header
                    as="h2"
                    textAlign="center"
                  >
                    <h2
                      className="ui center aligned header"
                    >
                      <FormattedMessage
                        defaultMessage="Sensors"
                        id="app.mission_control.sensors"
                        values={Object {}}
                      >
                        Sensors
                      </FormattedMessage>
                    </h2>
                  </Header>
                  <Segment
                    raised={true}
                    style={
                      Object {
                        "margin": "10px",
                      }
                    }
                  >
                    <div
                      className="ui raised segment"
                      style={
                        Object {
                          "margin": "10px",
                        }
                      }
                    >
                      <Component>
                        <div />
                      </Component>
                    </div>
                  </Segment>
                </div>
              </GridRow>
              <Divider>
                <div
                  className="ui divider"
                />
              </Divider>
              <GridRow>
                <div
                  className="row"
                >
                  <Header
                    as="h2"
                    textAlign="center"
                  >
                    <h2
                      className="ui center aligned header"
                    >
                      <FormattedMessage
                        defaultMessage="Debug Console"
                        id="app.mission_control.console"
                        values={Object {}}
                      >
                        Debug Console
                      </FormattedMessage>
                    </h2>
                  </Header>
                  <Segment
                    style={
                      Object {
                        "margin": "10px",
                      }
                    }
                  >
                    <div
                      className="ui segment"
                      style={
                        Object {
                          "margin": "10px",
                        }
                      }
                    >
                      <Component>
                        <div />
                      </Component>
                    </div>
                  </Segment>
                </div>
              </GridRow>
            </div>
          </GridColumn>
        </div>
      </GridRow>
    </div>
  </Grid>
</MissionControl>
`;
